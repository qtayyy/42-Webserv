[2025-04-25 20:30:08] cgi called
[2025-04-25 20:30:08] ENV SHELL=/bin/bash
[2025-04-25 20:30:08] ENV COLORTERM=truecolor
[2025-04-25 20:30:08] ENV VSCODE_DEBUGPY_ADAPTER_ENDPOINTS=/home/cooper/.vscode-server/extensions/ms-python.debugpy-2025.6.0-linux-x64/.noConfigDebugAdapterEndpoints/endpoint-c7f652b0b63d2992.txt
[2025-04-25 20:30:08] ENV WSL2_GUI_APPS_ENABLED=1
[2025-04-25 20:30:08] ENV TERM_PROGRAM_VERSION=1.99.3
[2025-04-25 20:30:08] ENV WSL_DISTRO_NAME=Ubuntu
[2025-04-25 20:30:08] ENV PYDEVD_DISABLE_FILE_VALIDATION=1
[2025-04-25 20:30:08] ENV HOMEBREW_PREFIX=/home/linuxbrew/.linuxbrew
[2025-04-25 20:30:08] ENV NAME=Cyber
[2025-04-25 20:30:08] ENV PWD=/home/cooper/coreProgram/webserve_ethan
[2025-04-25 20:30:08] ENV LOGNAME=cooper
[2025-04-25 20:30:08] ENV BUNDLED_DEBUGPY_PATH=/home/cooper/.vscode-server/extensions/ms-python.debugpy-2025.6.0-linux-x64/bundled/libs/debugpy
[2025-04-25 20:30:08] ENV VSCODE_GIT_ASKPASS_NODE=/home/cooper/.vscode-server/bin/17baf841131aa23349f217ca7c570c76ee87b957/node
[2025-04-25 20:30:08] ENV POSH_SHELL=bash
[2025-04-25 20:30:08] ENV MOTD_SHOWN=update-motd
[2025-04-25 20:30:08] ENV HOME=/home/cooper
[2025-04-25 20:30:08] ENV LANG=C.UTF-8
[2025-04-25 20:30:08] ENV WSL_INTEROP=/run/WSL/505_interop
[2025-04-25 20:30:08] ENV LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
[2025-04-25 20:30:08] ENV POSH_SHELL_VERSION=5.1.16(1)-release
[2025-04-25 20:30:08] ENV POSH_SESSION_ID=b754cafe-a418-4a40-80e0-9a872abb6e5e
[2025-04-25 20:30:08] ENV WAYLAND_DISPLAY=wayland-0
[2025-04-25 20:30:08] ENV OSTYPE=linux-gnu
[2025-04-25 20:30:08] ENV CONDA_PROMPT_MODIFIER=false
[2025-04-25 20:30:08] ENV GIT_ASKPASS=/home/cooper/.vscode-server/bin/17baf841131aa23349f217ca7c570c76ee87b957/extensions/git/dist/askpass.sh
[2025-04-25 20:30:08] ENV INFOPATH=/home/linuxbrew/.linuxbrew/share/info:
[2025-04-25 20:30:08] ENV VSCODE_GIT_ASKPASS_EXTRA_ARGS=
[2025-04-25 20:30:08] ENV LESSCLOSE=/usr/bin/lesspipe %s %s
[2025-04-25 20:30:08] ENV TERM=xterm-256color
[2025-04-25 20:30:08] ENV LESSOPEN=| /usr/bin/lesspipe %s
[2025-04-25 20:30:08] ENV USER=cooper
[2025-04-25 20:30:08] ENV VSCODE_GIT_IPC_HANDLE=/run/user/1000/vscode-git-eb3602b53e.sock
[2025-04-25 20:30:08] ENV HOMEBREW_CELLAR=/home/linuxbrew/.linuxbrew/Cellar
[2025-04-25 20:30:08] ENV DISPLAY=:0
[2025-04-25 20:30:08] ENV SHLVL=1
[2025-04-25 20:30:08] ENV HOMEBREW_REPOSITORY=/home/linuxbrew/.linuxbrew/Homebrew
[2025-04-25 20:30:08] ENV POSH_THEME=/home/cooper/ohmyposh.json
[2025-04-25 20:30:08] ENV XDG_RUNTIME_DIR=/run/user/1000/
[2025-04-25 20:30:08] ENV WSLENV=VSCODE_WSL_EXT_LOCATION/up
[2025-04-25 20:30:08] ENV VSCODE_GIT_ASKPASS_MAIN=/home/cooper/.vscode-server/bin/17baf841131aa23349f217ca7c570c76ee87b957/extensions/git/dist/askpass-main.js
[2025-04-25 20:30:08] ENV XDG_DATA_DIRS=/home/linuxbrew/.linuxbrew/share:/usr/local/share:/usr/share:/var/lib/snapd/desktop
[2025-04-25 20:30:08] ENV PATH=/home/cooper/.local/bin:/home/cooper/.vscode-server/bin/17baf841131aa23349f217ca7c570c76ee87b957/bin/remote-cli:/home/linuxbrew/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/sbin:/home/cooper/.local/bin:/home/cooper/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/Common Files/Oracle/Java/javapath:/mnt/c/Program Files (x86)/Common Files/Intel/Shared Libraries/redist/intel64/compiler:/mnt/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/mnt/c/Windows/system32:/mnt/c/Windows:/mnt/c/Windows/System32/Wbem:/mnt/c/Windows/System32/WindowsPowerShell/v1.0/:/mnt/c/Windows/System32/OpenSSH/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files (x86)/QuickTime/QTSystem/:/mnt/c/Program Files (x86)/dotnet/:/mnt/c/Program Files/dotnet/:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files/GitHub CLI/:/mnt/c/Program Files/nodejs/:/mnt/c/Program Files/Microsoft SQL Server/120/Tools/Binn/:/mnt/c/Users/emers/AppData/Local/Programs/Python/Python39/Scripts/:/mnt/c/Users/emers/AppData/Local/Programs/Python/Python39/:/mnt/c/Users/emers/scoop/shims:/mnt/c/Users/emers/AppData/Local/Programs/Python/Launcher/:/mnt/c/Users/emers/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/emers/.dotnet/tools:/mnt/c/Users/emers/AppData/Local/Microsoft/WindowsApps:/mnt/c/Users/emers/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/PATH_Programs:/mnt/c/Program Files (x86)/SWFTools:/mnt/c/Program Files (x86)/OptiPNG:/mnt/c/Users/emers/AppData/Local/GitHubDesktop/bin:/mnt/c/Users/emers/AppData/Local/Microsoft/WinGet/Packages/Gyan.FFmpeg.Essentials_Microsoft.Winget.Source_8wekyb3d8bbwe/ffmpeg-7.0-essentials_build/bin:/mnt/c/Program Files/Git/cmd:/mnt/c/Users/emers/AppData/Local/Programs/oh-my-posh/bin:/mnt/c/Users/emers/AppData/Roaming/npm:/mnt/c/Users/emers/AppData/Local/gitkraken/bin:/mnt/c/Users/emers/AppData/Local/Packages/PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0/LocalCache/local-packages/Python312/site-packages:/mnt/c/Program Files/JetBrains/CLion 2024.3/bin:/mnt/c/Users/emers/AppData/Local/Muse Hub/lib:/snap/bin:/home/cooper/.vscode-server/extensions/ms-python.debugpy-2025.6.0-linux-x64/bundled/scripts/noConfigScripts:/home/cooper/.vscode-server/data/User/globalStorage/github.copilot-chat/debugCommand
[2025-04-25 20:30:08] ENV DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/1000/bus
[2025-04-25 20:30:08] ENV HOSTTYPE=x86_64
[2025-04-25 20:30:08] ENV POWERLINE_COMMAND=oh-my-posh
[2025-04-25 20:30:08] ENV PULSE_SERVER=unix:/mnt/wslg/PulseServer
[2025-04-25 20:30:08] ENV TERM_PROGRAM=vscode
[2025-04-25 20:30:08] ENV VSCODE_IPC_HOOK_CLI=/run/user/1000/vscode-ipc-2a7f7835-562e-476b-9c81-3d7fea041b35.sock
[2025-04-25 20:30:08] ENV _=./webserv
[2025-04-25 20:30:08] ENV CONTENT_LENGTH=9872
[2025-04-25 20:30:08] ENV CONTENT_TYPE=multipart/form-data; boundary=----WebKitFormBoundaryONVVreGNfpH7QHyT
[2025-04-25 20:30:08] ENV PATH_INFO=/home/cooper/coreProgram/webserve_ethan/
[2025-04-25 20:30:08] ENV PATH_TRANSLATED=/home/cooper/coreProgram/webserve_ethan/
[2025-04-25 20:30:08] ENV QUERY_STRING=
[2025-04-25 20:30:08] ENV REQUEST_METHOD=POST
[2025-04-25 20:30:08] ENV SCRIPT_NAME=/home/cooper/coreProgram/webserve_ethan//cgi-bin/upload.py
[2025-04-25 20:30:08] ENV SERVER_NAME=localhost
[2025-04-25 20:30:08] ENV SERVER_PORT=8080
[2025-04-25 20:30:08] Received data: {'file': b'Introduction\nPlease adhere to the following rules:\n\n- Remain polite, courteous, respectful and constructive throughout the\nevaluation process. The well-being of the community depends on it.\n\n- Identify the possible dysfunctions in the project of the student or\ngroup whose work is being evaluated. Take the time to discuss and debate the\nproblems that may have been identified.\n\n- You must consider that there might be some differences in how your peers\nmight have understood the project\'s instructions and the scope of its\nfunctionalities. Always keep an open mind and grade them as honestly as\npossible. Pedagogy is useful only if peer evaluation is done seriously.\n\nGuidelines\n- Only grade the work submitted in the Git repository of the evaluated\nstudent or group.\n\n- Double-check that the Git repository belongs to the student or students. Ensure that\nthe project is the expected one. Also, check that \'git clone\' is used in an\nempty directory.\n\n- Check carefully that no malicious aliases were used to deceive you and make you\nevaluate something that is not the content of the official repository.\n\n- To avoid any surprises, and if applicable, review together any scripts used\nto facilitate grading (such as testing or automation scripts).\n\n- If you have not completed the assignment you are going to evaluate, you\nmust read the entire subject before starting the evaluation process.\n\n- Use the available flags to report an empty repository, a non-functioning\nprogram, a Norm error, cheating, etc.\nIn these cases, the evaluation process ends, and the final grade is 0,\nor -42 in the case of cheating. However, except in cases of cheating, students are\nstrongly encouraged to review the submitted work together\nto identify any mistakes that should not be repeated in the future.\n\nAttachments\n subject.pdf\nPreliminaries\nIf cheating is suspected, the evaluation stops here. Use the "Cheat" flag to report this. Make this decision calmly and wisely, and please, use this button with caution.\n\nPreliminary tests\n\nFor example, the use of a local .env file to store info is allowed, and/or also the use of Docker secrets. If any credentials or API keys are available in the Git repository and outside of secrets files created during the evaluation, the evaluation stops and the mark is 0.\nThe defense can only occur if the evaluated student or group is present. This way, everyone learns by sharing knowledge with one another.\nIf no work has been submitted (or wrong files, wrong directory, or wrong filenames), the grade is 0, and the evaluation process ends.\nFor this project, you must clone their Git repository on their workstation.\nGeneral instructions\nGeneral instructions\n\nThoughout the evaluation process, if you do not know how to check a requirement, or verify something, the evaluated student must assist you.\nEnsure that all files required to configure the application are located within a \'srcs\' folder. The \'srcs\' folder must be located at the root of the repository.\nEnsure that a Makefile is located at the root of the repository.\nBefore beginning the evaluation, execute this command in the terminal: "docker stop $(docker ps -qa); docker rm $(docker ps -qa); docker rmi -f $(docker images -qa); docker volume rm $(docker volume ls -q); docker network rm $(docker network ls -q) 2>/dev/null"\nRead the docker-compose.yml file. There must not be \'network: host\' or \'links:\' in it. Otherwise, the evaluation ends immediately.\nRead the docker-compose.yml file. It must contain \'network(s)\'. Otherwise, the evaluation ends immediately.\nExamine the Makefile and all the scripts in which Docker is used. None of them must contain \'--link\'. Otherwise, the evaluation ends immediately.\nExamine the Dockerfiles. None of them must contain \'tail -f\' or any command running in the background in the ENTRYPOINT section. If there is, the evaluation ends immediately. The same applies if \'bash\' or \'sh\' are used but not for running a script (e.g., \'nginx & bash\' or \'bash\').\nExamine the Dockerfiles. Containers must be built from either the penultimate stable version of Alpine or Debian.\nIf the entrypoint is a script (e.g., ENTRYPOINT ["sh", "my_entrypoint.sh"], ENTRYPOINT ["bash", "my_entrypoint.sh"]), ensure it runs no program\nin the background (e.g., \'nginx & bash\').\nExamine all the scripts in the repository. Ensure that none of them runs an infinite loop. The following are examples of prohibited commands: \'sleep infinity\', \'tail -f /dev/null\', \'tail -f /dev/random\'.\nRun the Makefile.\nMandatory part\nThis project involves setting up a small infrastructure composed of different services using docker compose. Ensure that all of the following points are correct.\n\nProject overview\n\nThe evaluated person must explain the following to you in simple terms:\nHow Docker and docker compose work.\nThe difference between a Docker image used with docker compose and without docker compose.\nThe benefit of Docker compared to virtual machines (VMs).\nThe relevance of the directory structure required for this project (an example is provided in the project\'s PDF file).\nSimple setup\n\nEnsure that NGINX is accessible only through port 443. Once completed, open the page.\nEnsure that an SSL/TLS certificate is being used.\nEnsure that the WordPress website is properly installed and configured; you should not see the WordPress installation page. To access it, open https://login.42.fr in your browser, where \'login\' is the username of the evaluated student. You should not be able to access the site via\nhttp://login.42.fr. If something does not work as expected, the evaluation process ends immediately.\nDocker Basics\n\nBegin by checking the Dockerfiles. There must be one Dockerfile for each service. Ensure that the Dockerfiles are not empty. If this is not the case or if a Dockerfile is missing, the evaluation process ends immediately.\nEnsure that the evaluated student has written their own Dockerfiles and built their own Docker images. It is prohibited to use pre-made ones or services such as DockerHub.\nEnsure that each container is built from the penultimate stable version of Alpine or Debian. If a Dockerfile does not start with \'FROM alpine:X.X.X\', \'FROM debian:XXXXX\', or any other local image, the evaluation process ends immediately.\nDocker images must have the same name as their corresponding service. Otherwise, the evaluation process ends immediately.\nEnsure that the Makefile sets up all the services via docker compose. This means that the containers must be built using docker compose and that no crashes occur. Otherwise, the evaluation process ends.\nDocker Network\n\nEnsure that docker-network is used by checking the docker-compose.yml file. Then, run the \'docker network ls\' command to verify that a network is visible.\nThe evaluated student must provide a simple explanation of docker-network. If any of the above points is not correct, the evaluation process ends immediately.\nNGINX with SSL/TLS\n\nEnsure that there is a Dockerfile.\nUsing the \'docker compose ps\' command, ensure that the container is created (using the flag \'-p\' is permitted if necessary).\nAttempt to access the service via HTTP (port 80) and verify that you cannot connect.\nOpen https://login.42.fr/ in your browser, where login is the login of the evaluated student. The displayed page must be the configured WordPress website (you should not see the WordPress installation page).\nThe use of a TLS v1.2/v1.3 certificate is mandatory and must be demonstrated. The SSL/TLS certificate does not have to be recognized. A warning for a self-signed certificate may appear. If any of the above points is not clearly explained and correct, the evaluation process ends immediately.\nWordPress with php-fpm and its volume\n\nEnsure that there is a Dockerfile.\nEnsure that NGINX is not included in the Dockerfile.\nUsing the \'docker compose ps\' command, ensure that the container was created (using the flag \'-p\' is authorized if necessary).\nEnsure that a volume is present. To do so: Run the command \'docker volume ls\' then \'docker volume inspect <volume name>\'. Verify that the standard output contains the path \'/home/login/data/\', where \'login\' is the username of the evaluated student.\nEnsure that you can add a comment using the available WordPress account.\nSign in with the administrator account to access the administration dashboard. The administrator username must not include \'admin\' or \'Admin\' (e.g., admin, administrator, Admin-login, admin-123, etc.).\nFrom the administration dashboard, edit a page. Verify on the website that the page is updated. If any of the above points is not correct, the evaluation process ends now.\nMariaDB and its volume\n\nEnsure that there is a Dockerfile.\nEnsure that there is no NGINX in the Dockerfile.\nUsing the \'docker compose ps\' command, ensure that the container was created (using the flag \'-p\' is authorized if necessary).\nEnsure that there is a Volume. To do so: Run the command \'docker volume ls\' then \'docker volume inspect <volume name>\'. Verify that the result in the standard output contains the path \'/home/login/data/\', where login is the login of the evaluated student.\nThe evaluated student must be able to explain how to log in to the database. Ensure that the database is not empty. If any of the above points is not correct, the evaluation process ends now.\nPersistence!\n\nThis part is straightforward. You must reboot the virtual machine. Once it has restarted, launch docker compose again. Then, verify that everything is functional and that both WordPress and MariaDB are configured. The changes you made previously to the WordPress website should still be present. If any of the above points is not correct, the evaluation process ends now.\n'}
[2025-04-25 20:30:08] POST
